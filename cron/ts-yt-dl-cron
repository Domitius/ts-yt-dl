#!/bin/sh

## Copyright (C) 2014 Richard Nelson <unixabg@gmail.com>
##
## This program comes with ABSOLUTELY NO WARRANTY; for details see COPYING.
## This is free software, and you are welcome to redistribute it
## under certain conditions; see COPYING for details.

set -e

# Establish some variables
_ENABLE_TIMESHIFT="true"
_DEBUG="true"
_TEMPDIR="/srv/ts-yt-dl/tmp"
_WWWDIR="/srv/ts-yt-dl/www"
_SERVER="$(hostname -f)"
_INSTANCES="1"
_TEMPLATES="/usr/share/ts-yt-dl/templates"
_REMOTEADDR=""
_TIMESHIFT=""
_TSCALL=""
_USERID=""
_TIMESHIFT_PATH=""
_DATE_BEGIN=""
_DATE_END=""

# Exit if disabled
if [ "${_ENABLE_TIMESHIFT}" != "true" ]
then
	exit 0
fi

# Turn on debug if true
if [ "${_DEBUG}" = "true" ]
then
	set -x
fi

# Locknum sets the lock enumeration for multiple instances of ts-yt-dl
_LOCKNUM="$(expr 1 + $(expr $(date +%M) % ${_INSTANCES}))"

# Checking lock file
if [ -f /var/lock/ts-yt-dl-${_LOCKNUM}.lock ]
then
	echo "E: ts-yt-dl instance ${_LOCKNUM} already/still running."
	exit 1
fi

# Creating lock trap
trap "test -f /var/lock/ts-yt-dl-${_LOCKNUM}.lock && rm -f /var/lock/ts-yt-dl-${_LOCKNUM}.lock; exit 0" 0 1 2 3 9 15

# Creating lock file
touch /var/lock/ts-yt-dl-${_LOCKNUM}.lock

# Ok from here spin through the ts-yt-dl files
if ls "${_TEMPDIR}"/*.ts > /dev/null 2>&1
then
	_FILE=$(ls "${_TEMPDIR}"/*.ts | sort | head -1)
	# Pull in variables from the time shift file.
	. "${_FILE}"
	# Get the basename of the file for folder work.
	_TIMESHIFT=$(basename ${_FILE} .ts)
	_TIMESHIFT_PATH="${_WWWDIR}"/"${_USERID}"/"${_TIMESHIFT}"
	# Drop out some time shift data for information if something goes wrong.
	echo "`date +%b\ %d\ %H:%M:%S` ${_HOSTNAME} ts-yt-dl: begin time shift ${_TIMESHIFT})." >> /var/log/ts-yt-dl/log

	# Create time shift work folder.
	mkdir -p "${_TIMESHIFT_PATH}"

	# Move the time shift file.
	mv "${_FILE}" "${_TIMESHIFT_PATH}"/
	# Drop in to the shift folder.
	cd "${_TIMESHIFT_PATH}"/

	# Set the output status of build to pending - 2.
	echo 2 > "${_TIMESHIFT_PATH}"/status.txt

	# Drop some log info out.
	_DATE_START="`date -R`"
	echo "Begin ts-yt-dl: ${_DATE_START}" > "${_TIMESHIFT_PATH}"/log

	# FIXME - Initiate time shift command.
	/usr/bin/youtube-dl ${_TSCALL} >> "${_TIMESHIFT_PATH}"/log 2>&1
	_ERRORTIMESHIFT="${?}"

	_DATE_END="`date -R`"
	echo "End: ${_DATE_END}" >> "${_TIMESHIFT_PATH}"/log

	# Creating information for info template and logging.
	if [ "${_ERRORTIMESHIFT}" -eq "0" ]
	then
		#_STATUS="maybe-successful"
		_STATUS="0"
		echo "${_REMOTEADDR} - - `date +[%d/%b/%Y:%H:%m:%S\ %z]` \"${_TIMESHIFT}\" 200 - \"-\" \"\"">>/var/log/ts-yt-dl/status
	else
		#_STATUS="maybe-failed"
		_STATUS="1"
		echo "${_REMOTEADDR} - - `date +[%d/%b/%Y:%H:%m:%S\ %z]` \"${_TIMESHIFT}\" 404 - \"-\" \"\"">>/var/log/ts-yt-dl/status
	fi

	# Output status of build.
	echo ${_STATUS} > "${_TIMESHIFT_PATH}"/status.txt

	echo "`date +%b\ %d\ %H:%M:%S` ${_SERVER} ts-yt-dl: end time attempt (${_TIMESHIFT} : ${_STATUS})." >> /var/log/ts-yt-dl/log
fi
